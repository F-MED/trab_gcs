public class TicketSystem {
    private List<Ticket> tickets;
    
    public TicketSystem() {
        tickets = new ArrayList<Ticket>();
    }
    
    public void addTicket(Ticket ticket) {
        tickets.add(ticket);
    }
    
    public List<Ticket> searchTickets(String palavraChave) {
        List<Ticket> result = new ArrayList<Ticket>();
        
        for (Ticket ticket : tickets) {
            if (ticket.getNomeFuncionario().contains(palavraChave) ||
                ticket.getDescricaoEquipamento().contains(palavraChave) ||
                ticket.getNomeSetor().contains(palavraChave) ||
                ticket.getTextoSolicitacao().contains(palavraChave) ||
                ticket.getTextoResolucao().contains(palavraChave)) {
                result.add(ticket);
            }
        }
        
        return result;
    }
}

TicketSystem ticketSystem = new TicketSystem();

// Tickets
ticketSystem.addTicket(new Ticket("Gustavo", "Celular", "TI", "Aparelho nao realizada chamadas", "Reiniciar o equipamento"));
ticketSystem.addTicket(new Ticket("Bianca", "Computador", "TI", "Software desatualizado", "Atualizar Software"));
ticketSystem.addTicket(new Ticket("Fabricio", "Impressora", "TI", "Impressora nao imprime colorido", "Substituir cartucho"));

// Busca por tickets com "password"
List<Ticket> result = ticketSystem.searchTickets("password");

// Imprimir tickets correspondentes
for (Ticket ticket : result) {
    System.out.println("Nome do funcionario: " + ticket.getNomeFuncionario());
    System.out.println("Descricao do equipamento: " + ticket.getDescricaoEquipamento());
    System.out.println("Nome do setor: " + ticket.getNomeSetor());
    System.out.println("Texto de solicitacao: " + ticket.getTextoSolicitacao());
    System.out.println("Texto de resolucao: " + ticket.getTextoResolucao());
}
